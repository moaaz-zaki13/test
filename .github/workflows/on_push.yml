# this is a work flow on push and merge

name: xmpl CI/CD

on:                         # run this workflow on the following events
   [workflow_dispatch] 
      
   # paths:
   #   - 'src/**'

 
jobs:

  unit-test:
       runs-on: ubuntu-latest

       strategy:
            fail-fast: false
            matrix:
              node-version: [18.x, 20.x]  # Test on Node.js 18 and 20

       steps:

          - name: Checkout code   
            uses: actions/checkout@v4     # Download repo files into runner

          - name: Setup Node.js
            uses: actions/setup-node@v3 # Ready action to install Node.js
            with:
                node-version: ${{ matrix.node-version }} # Use version from matrix

          - name: Install dependencies
            run: npm install            # Install npm packages from package.json

          - name: Run tests
            run:  npm test -- --json --outputFile=test-results.json     # Run your unit tests (e.g., Jest)


          
          - name: Prepare artifact folder
            run: |
              mkdir -p test-artifact
              cp -r coverage test-artifact/coverage
              cp test-results.json test-artifact/


          - name: Upload temporary results
            if: always()   # ensures artifact is uploaded for combine job
            uses: actions/upload-artifact@v4
            with:
              name: temp-${{ matrix.node-version }}
              path: test-artifact




########################## New Job to combine reports in one file ##########################

  combine-reports:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Download Node 18 results
        uses: actions/download-artifact@v4
        with:
          name: temp-18.x        
          path: combined/18

      - name: Download Node 20 results
        uses: actions/download-artifact@v4
        with:
          name: temp-20.x        
          path: combined/20

      - name: Merge reports
        run: |
          mkdir -p all-tests
          cp -r combined/* all-tests/

      - name: Upload combined artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results-all
          path: all-tests
          retention-days: 5


  ########################## New Job to lint using ESLINT ##########################

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x   # you can also make this a matrix like tests

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run:  npm run lint -- --format json --output-file eslint-report.json

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: eslint-report.xml



  ########################## New Job to analyze using CodeQL ##########################   
     
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    permissions:                 # minimal permissions the job needs
      actions: read              # allow reading actions metadata
      contents: read             # allow reading repo contents
      security-events: write     # allow writing security/code-scanning events


    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]       # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}    


    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # Analayzing the code 
    -  name: Perform CodeQL Analysis
       uses: github/codeql-action/analyze@v3  # run the actual security/quality scan
       with:
          output: codeql-results
          upload: never            # stops auto-upload, keeps only local files

    # Upload the CodeQL results as an artifact
    - name: Upload CodeQL results
      uses: actions/upload-artifact@v4
      with:
        name: codeql-results
        path: codeql-results
        retention-days: 5
